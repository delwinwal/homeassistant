blueprint:
  name: IKEA Tradfri on/off switch - 2 zones
  description: |
    "Control your light(s) with IKEA Tradfri on/off switch
    Select the Tradfri remote and your lights.
    You can turn the lights On / Off, or hold the buttons to dim the lights"
  domain: automation
  input:
    remote:
      name: Remote
      description: The remote that will control the lights
      selector:
        device:
          manufacturer: IKEA of Sweden
          model: TRADFRI on/off switch
    light_primary:
      name: Primary Light
      description: The lights that will be controlled by the on button
      selector:
        entity:
          domain: light
    light_secondary:
      name: Secondary Light
      description: The lights that will be controlled by the off button
      selector:
        entity:
          filter:
            domain: light
    light_dimmable:
      name: Dimmable Light
      description: The lights which brightness will be controllable by long press
      selector:
        entity:
          filter:
            domain: light

mode: restart

trigger:
  - platform: event
    event_type:
      - deconz_event
      - zha_event
    event_data:
      device_id: !input 'remote'

action:
  - variables:
      event: '{{ trigger.event.data.event }}'
      command: '{{ trigger.event.data.command }}'
      light_primary: !input 'light_primary'
      light_secondary: !input 'light_secondary'

  - choose:
      - conditions:
          - '{{ event == 1002 or command == "on" }}'
        sequence:
          - choose:
              - conditions:
                  - "{{ states(light_primary) == 'on' }}"
                sequence:
                  - service: light.turn_on
                    entity_id: !input 'light_secondary'
                  - delay:
                      milliseconds: 200
                  - service: light.turn_off
                    entity_id: !input 'light_primary'
            default:
              - service: light.turn_on
                entity_id: !input 'light_primary'
              - delay:
                  milliseconds: 200
              - service: light.turn_off
                entity_id: !input 'light_secondary'
  
      - conditions:
          - '{{ event == 2002 or command == "off" }}'
        sequence:
          - choose:
              - conditions:
                  - "{{ states(light_primary) == 'off' }}"
                  - "{{ states(light_secondary) == 'off' }}"
                sequence:
                  - service: light.turn_on
                    entity_id: !input 'light_secondary'
            default:
              - service: light.turn_off
                entity_id: !input 'light_primary'
              - service: light.turn_off
                entity_id: !input 'light_secondary'
  
      - conditions:
          - '{{ event == 1001 or command == "move_with_on_off" }}'
        sequence:
          repeat:
            count: 10
            sequence:
            - service: light.turn_on
              entity_id: !input 'light_dimmable'
              data:
                transition: 0.25
                brightness_step_pct: 10
            - delay:
                milliseconds: 500
  
      - conditions:
          - '{{ event == 2001 or command == "move" }}'
        sequence:
          repeat:
            count: 10
            sequence:
            - service: light.turn_on
              entity_id: !input 'light_dimmable'
              data:
                transition: 0.25
                brightness_step_pct: -10
            - delay:
                milliseconds: 500
