blueprint:
  name: deCONZ - IKEA Tradfri on/off switch - 2 zones test
  description: |
    "Control your deCONZ light(s) with IKEA Tradfri on/off switch
    
    Select the Tradfri remote and your lights.
    You can turn the lights On / Off, or hold the buttons to dim the lights"
  domain: automation
  input:
    remote:
      name: Remote
      description: The remote that will control the lights
      selector:
        device:
          integration: deconz
          manufacturer: 'IKEA of Sweden'
          model: 'TRADFRI on/off switch'
    light_primary:
      name: Primary Light
      description: The lights that will be controlled by the on button
      selector:
        entity:
          domain: light
    light_secondary:
      name: Secondary Light
      description: The lights that will be controlled by the off button
      selector:
        entity:
          domain: light
    light_dimmable:
      name: Dimmable Light
      description: The lights which brightness will be controllable by long press
      selector:
        entity:
          domain: light

mode: restart

trigger:
- platform: event
  event_type: deconz_event
  event_data:
    device_id: !input 'remote'

action:
- variables:
    event: "{{ trigger.event.data.event }}"

- choose:
  - conditions:
    - "{{ event == 1002 }}"
    sequence:
    - choose:
      - conditions:
        - condition: state
          entity_id: !input 'light_primary'
          state: 'on'
        sequence:
        - service: light.turn_off
          target: !input 'light_primary'
        - service: light.turn_on
          target: !input 'light_secondary'
      default:
      - service: light.turn_on
        target: !input 'light_primary'
      - service: light.turn_off
        target: !input 'light_secondary'

  - conditions:
    - "{{ event == 2002 }}"
    sequence:
    - choose:
      - condition: or
        conditions:
        - condition: state
          entity_id: !input 'light_primary'
          state: 'on'
        - condition: state
          entity_id: !input 'light_secondary'
          state: 'on'
        sequence:
        - service: light.turn_off
          target: !input 'light_primary'
        - service: light.turn_off
          target: !input 'light_secondary'
      default:
      - service: light.turn_on
        target: !input 'light_secondary'

  - conditions:
    - "{{ event == 1001 }}"
    sequence:
      repeat:
        count: 10
        sequence:
        - service: light.turn_on
          target: !input 'light_dimmable'
          data:
            transition: 0.25
            brightness_step_pct: 10
        - delay:
            milliseconds: 500

  - conditions:
    - "{{ event == 2001 }}"
    sequence:
      repeat:
        count: 10
        sequence:
        - service: light.turn_on
          target: !input 'light_dimmable'
          data:
            transition: 0.25
            brightness_step_pct: -10
        - delay:
            milliseconds: 500
